name: "[DEVELOPMENT RELEASE V1]"
run-name: DEVELOPMENT release by ${{ github.actor }} ðŸš€
on:
  pull_request:
    branches: [development]
    types:
      - closed
jobs:
  Release-Development:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
        
      - 
        name: Get Latest Release Tag
        id: getLatestReleaseTag
        run: |
          latest_release_tag=$(gh release list --limit 1 | awk '{print $1}')
          echo ::set-output name=latest_release_tag::"$latest_release_tag"
        env:
          GH_TOKEN: ${{ github.token }}

      - 
        name: Calculate Release Candidate Version
        id: bump_rc_version
        if: contains(github.event.pull_request.title, '[RELEASE-CANDIDATE]')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.getLatestReleaseTag.outputs.latest_release_tag }}
          version-fragment: 'rc'
                    
      - 
        name: Calculate Pre-Release Version
        id: bump_pre_version
        if: contains(github.event.pull_request.title, '[PRE-RELEASE]')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.getLatestReleaseTag.outputs.latest_release_tag }}
          version-fragment: 'pre'
          
      - 
        name: Calculate Beta Release Version
        id: bump_beta_version
        if: contains(github.event.pull_request.title, '[BETA-RELEASE]')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.getLatestReleaseTag.outputs.latest_release_tag }}
          version-fragment: 'beta'
      
      - 
        name: Calculate Alpha Release Version
        id: bump_alpha_version
        if: contains(github.event.pull_request.title, '[ALPHA-RELEASE]')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.getLatestReleaseTag.outputs.latest_release_tag }}
          version-fragment: 'alpha'

      -
        name: Set Final Release Version
        id: set_final_version
        run: |
          if [ ${{ steps.bump_rc_version.outputs.next-version }} ]; then
              echo "final_release_tag=${{ steps.bump_rc_version.outputs.next-version }}" >> $GITHUB_OUTPUT
          elif [ ${{ steps.bump_pre_version.outputs.next-version }} ]; then
              echo "final_release_tag=${{ steps.bump_pre_version.outputs.next-version }}" >> $GITHUB_OUTPUT
          elif [ ${{ steps.bump_beta_version.outputs.next-version }} ]; then
              echo "final_release_tag=${{ steps.bump_beta_version.outputs.next-version }}" >> $GITHUB_OUTPUT
          elif [ ${{ steps.bump_alpha_version.outputs.next-version }} ]; then
              echo "final_release_tag=${{ steps.bump_alpha_version.outputs.next-version }}" >> $GITHUB_OUTPUT
          fi
      
      -
        name: Create New Tag & Release
        # run: echo ${{ steps.version.outputs.version }}
        run: gh release create v${{ steps.set_final_version.outputs.final_release_tag }} --target ${{ github.sha }} --prerelease
        env:
          GH_TOKEN: ${{ github.token }}
      # -
      #   name: Build and Push
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     tags: ghcr.io/amanthakur0001/github-actions:${{ github.ref_name }}-${{ github.sha }}